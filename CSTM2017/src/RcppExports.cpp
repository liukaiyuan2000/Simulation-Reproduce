// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mvrnorm_rcpp
NumericMatrix mvrnorm_rcpp(int n, NumericVector mu, NumericMatrix sigma);
RcppExport SEXP _CSTM2017_mvrnorm_rcpp(SEXP nSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(mvrnorm_rcpp(n, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// Tnm_rcpp
Eigen::VectorXd Tnm_rcpp(Eigen::MatrixXd X);
RcppExport SEXP _CSTM2017_Tnm_rcpp(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(Tnm_rcpp(X));
    return rcpp_result_gen;
END_RCPP
}
// Snm_rcpp
Eigen::VectorXd Snm_rcpp(Eigen::MatrixXd X);
RcppExport SEXP _CSTM2017_Snm_rcpp(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(Snm_rcpp(X));
    return rcpp_result_gen;
END_RCPP
}
// T3_rcpp
Eigen::VectorXd T3_rcpp(Eigen::MatrixXd X);
RcppExport SEXP _CSTM2017_T3_rcpp(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(T3_rcpp(X));
    return rcpp_result_gen;
END_RCPP
}
// Trho_rcpp
Eigen::VectorXd Trho_rcpp(Eigen::MatrixXd X);
RcppExport SEXP _CSTM2017_Trho_rcpp(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(Trho_rcpp(X));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CSTM2017_mvrnorm_rcpp", (DL_FUNC) &_CSTM2017_mvrnorm_rcpp, 3},
    {"_CSTM2017_Tnm_rcpp", (DL_FUNC) &_CSTM2017_Tnm_rcpp, 1},
    {"_CSTM2017_Snm_rcpp", (DL_FUNC) &_CSTM2017_Snm_rcpp, 1},
    {"_CSTM2017_T3_rcpp", (DL_FUNC) &_CSTM2017_T3_rcpp, 1},
    {"_CSTM2017_Trho_rcpp", (DL_FUNC) &_CSTM2017_Trho_rcpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_CSTM2017(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
