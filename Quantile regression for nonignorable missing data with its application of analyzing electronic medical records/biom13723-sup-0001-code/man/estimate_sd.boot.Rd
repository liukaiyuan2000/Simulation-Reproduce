% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_sd_boot.R
\name{estimate_sd.boot}
\alias{estimate_sd.boot}
\title{Estimate standard deviation of the proposed estimates via bootstrapping}
\usage{
estimate_sd.boot(
  sim_data,
  p1,
  p2,
  q1,
  q2,
  thresh,
  max_iter.ms,
  tau_seq.out,
  tau_seq.ms,
  m,
  B,
  num_cores
)
}
\arguments{
\item{sim_data}{imported data frame of the form sim_data = data.frame(X,Y).
the last column of sim_data is the respones Y which subject to missing (NA if missing).
the other columns of sim_data are the covariates X = (X1, X2)= (X1.cat, X1.cont, X2.cat, X2.cont) in order, where
X1 refers to covariates which are related to the response and also included in the misssing mechanism model;
X2 refers to the auxiliary variable, which means given (X1, Y), X2 is not included in the misssing mechanism model;
X1.cat and X2.cat are the categorical variables in X1 and X2, respectively;
X1.cont and X2.cont are the continuous variables in X1 and X2, respectively.}

\item{p1}{the number of categorical variables contained in X1}

\item{p2}{the number of continuous variables contained in X1; p1>0 since X1.cont Include intercept term}

\item{q1}{the number of categorical variables contained in X2}

\item{q2}{the number of continuous variables contained in X2; q1+q2>0 since X2 has a dimension of at least 1}

\item{thresh}{the threshold of this algorithm for convergence}

\item{max_iter.ms}{The maximum iterations of this algorithm;
When the algorithm reaches the maximum number of iterations or threshold, the algorithm stops iterating}

\item{tau_seq.out}{a vector; the quantiles at which the regression coefficients to be estimated for the output
The result will output the coefficient estimates of the quantile regression of these quantile points}

\item{tau_seq.ms}{a vector; the quantiles at which the regression coefficients to be estimated for f(y|x)
when estimating theta, similar as Wei. et al(2009) to estimate the density f(y|x)}

\item{m}{the number of samples drawn from f(y|x) for the missing response Y}

\item{B}{bootstrap times to estimate estimate standard deviation of the proposed coefficient estimate}

\item{num_cores}{number of CPU cores used for parallel computing for bootstrapping}
}
\value{
the output is a list; the first element of the list is a vector, including the average number of iteration of
bootstrapping B times and the average maximum difference of the estimates between the previous and last iterations
when the algorithm terminates;
the second element of the list is a vector, the estimated standard deviation of missing mechanism coefficients
estimation via bootstrapping B times;
the third element of the list is a matrix, the estimated standard deviation of quantile regression coefficients
estimation at quantile "tau_seq.out" via bootstrapping B times.
}
\description{
This function is used to estimate standard deviation of the proposed estimates via weighted bootstrapping by parallel computing
}
\examples{
## generate sim_data for example
nsize <- 1000
beta <- c( 1,-2,2,0.5 ); gam <- c( 0.5, 0.5, 0.2, 0); theta <- c(-2, 0.5,0.5,0.5)
x1 <- rbinom( nsize, 1, 0.5); x2 <- rnorm( nsize, mean = 2, sd = 0.5); x3 <- runif( nsize, min = 0, max = 2)
xx <- cbind( 1, x1, x2, x3); err <- xx\%*\%gam*rnorm( nsize, mean = 0, sd = 0.5); yy <- xx \%*\% beta + err
xy <- cbind( 1, x1, x2, yy); prob.m <- 1/( 1+ exp( - xy \%*\% theta ))
delta.ind <- sapply( prob.m, function(p){rbinom(n=1, size=1, prob=p)}); yy[delta.ind==0] <- NA
sim_data <- data.frame( x1, x2, x3, yy)
p1<- 1; p2<- 1; q1<- 0; q2 <- 1

## set the initial value related to the algorithm
thresh = 1e-04; max_iter.ms <- 50;  m <- 100; B = 100; num_cores <- 5
tau_seq.ms  <- seq(0.05, 0.95, by = 0.05); tau_seq.out <- seq(0.25, 0.75, by = 0.25)

## to obtain standard errors of quantile coefficients estimates via bootstrapping by parallel computing
out_sd <- estimate_sd.boot( sim_data, p1, p2, q1, q2, thresh, max_iter.ms, tau_seq.out, tau_seq.ms, m, B, num_cores)
out_sd[[3]] # standard errors of quantile coefficients estimates via bootstrapping
}
